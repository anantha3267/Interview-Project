pipeline {
    agent any
    tools {
        jdk 'jdk'
        maven 'maven'
    }

    stages {
        stage("Git Checkout"){
            steps{
                git branch: 'main', changelog: false, poll: true, url: 'https://github.com/anantha3267/Interview-Project.git'
            }
        }
                stage("Compile"){
            steps{
                sh "mvn clean compile"
            }
        }
        
         stage("Test Cases"){
            steps{
                sh "mvn test"
            }
        }
    stage("Sonar analysis"){
            steps{
                sh "mvn clean package"
                sh ''' mvn sonar:sonar -Dsonar.url=http://3.87.111.231:9000/ -Dsonar.login=squ_243a8ea9381287139804a2590d5625bc6ff4f5ec -Dsonar.projectName=Scoreme \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Scoreme '''
            }
        }

        stage("Quality Gate"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
    }
                  stage('OWASP') {
            steps {
                dependencyCheck additionalArguments: '--format HTML', odcInstallation: 'Dependency check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
                }
            
  
}
}
